knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "/Users/pernillebrams/Desktop/AARHUS_UNIVERSITY/instructor_2024/methods-2")
good_shot <- rbinom(1,1,0.6)
good_shot <- rbinom(1,1,0.6)
good_shot <- rbinom(1,1,0.6)
good_shot <- rbinom(1,1,0.6)
good_shot
good_shot <- rbinom(1,1,0.6)
good_shot
good_shot <- rbinom(1,1,0.6)
good_shot
good_shot <- rbinom(1,1,0.6)
good_shot
good_shot <- rbinom(1,1,0.6)
good_shot
good_shot <- rbinom(1,1,0.6)
good_shot
good_shot <- rbinom(1,1,0.6)
good_shot
good_shot <- rbinom(1,1,0.6)
good_shot
# Function to simulate basketball player
basketball <- function(){ # starting the function for you
miss <- 0
hits <- 0
while(miss<2){
good_shot <- rbinom(1,1,0.6)
if(good_shot==1){
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
hits <- 0
}
}
}
# Example usage of the function, when done
basket_sim <- basketball(printing = TRUE)
# Function to simulate basketball player
basketball <- function(number){ # starting the function for you
miss <- 0
hits <- 0
shots <- 0
while(miss<2){
shots <- shots + 1
if(number==1){
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
hits <- 0
}
}
}
basket_sim <- basketball(rbinom(1,1,0.6))
basket_sim <- basketball(rbinom(1,1,0.6))
# Function to simulate basketball player
basketball <- function(number){ # starting the function for you
miss <- 0
hits <- 0
shots <- 0
while(miss<2){
shots <- shots + 1
if(number==1){
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
hits <- 0
}
}
return(miss,hits,shots)
}
# Example usage of the function, when done
basket_sim <- basketball(rbinom(1,1,0.6))
# Function to simulate basketball player
basketball <- function(){
miss <- 0
hits <- 0
shots <- 0
while(miss<2){
shot <- rbinom(1,1,0.6)
shots <- shots + 1
if(shot==1){
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
hits <- 0
}
}
return(c(miss,hits,shots))
}
basket_sim <- basketball()
# Function to simulate basketball player
basketball <- function(){
miss <- 0
hits <- 0
shots <- 0
while(miss<2){
shot <- rbinom(1,1,0.6)
shots <- shots + 1
if(shot==1){
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
hits <- 0
}
}
return(shots)
}
basket_sim <- basketball()
basket_sim <- basketball()
basket_sim <- basketball()
n_sims <- 1000
n_shots <- rep(NA,n_sims)
for(i in 1:n_sims){
n_shots[i] <- basketball()
}
mean(n_shots)
sd(n_shots)
hist(n_shots)
# Function to simulate basketball player
basketball <- function() {
miss <- 0
hits <- 0
shots <- 0
while (miss < 2) {
shot <- rbinom(1, 1, 0.6)
shots <- shots + 1
if (shot == 1) {
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
}
}
success_rate <- hits/shots
return(shots,success_rate)
}
for(i in 1:n_sims){
n_shots[i] <- basketball()
}
# Function to simulate basketball player
basketball <- function() {
miss <- 0
hits <- 0
shots <- 0
while (miss < 2) {
shot <- rbinom(1, 1, 0.6)
shots <- shots + 1
if (shot == 1) {
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
}
}
success_rate <- hits/shots
return(shots)
}
for(i in 1:n_sims){
n_shots[i] <- basketball()
}
basketball2 <- function() {
miss <- 0
hits <- 0
shots <- 0
while (miss < 2) {
shot <- rbinom(1, 1, 0.6)
shots <- shots + 1
if (shot == 1) {
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
}
}
success_rate <- hits / shots
return(shots, success_rate)
}
result <- basketball2()
result <- c(basketball2())
return(c(shots, success_rate))
basketball2 <- function() {
miss <- 0
hits <- 0
shots <- 0
while (miss < 2) {
shot <- rbinom(1, 1, 0.6)
shots <- shots + 1
if (shot == 1) {
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
}
}
success_rate <- hits / shots
return(c(shots, success_rate))
}
result <- basketball2()
n_sims <- 1000
n_shots <- rep(NA,n_sims)
shots_taken <- sapply(n_shots, function(x) x$shots)
n_shots <- rep(n_sims,basketball())
shots_taken <- sapply(n_shots, function(x) x$shots)
num_simulations <- 1000
results <- replicate(num_simulations, basketball())
# Extract the number of shots and proportion of successes
shots_taken <- sapply(results, function(x) x$shots)
(list(shots = shots, proportion_success = proportion_success))
basketball2 <- function() {
miss <- 0
hits <- 0
shots <- 0
while (miss < 2) {
shot <- rbinom(1, 1, 0.6)
shots <- shots + 1
if (shot == 1) {
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
}
}
success_rate <- hits / shots
(list(shots = shots, proportion_success = proportion_success))
}
basketball2 <- function() {
miss <- 0
hits <- 0
shots <- 0
while (miss < 2) {
shot <- rbinom(1, 1, 0.6)
shots <- shots + 1
if (shot == 1) {
hits <- hits + 1
miss <- 0
}
else{
miss <- miss + 1
}
}
success_rate <- hits / shots
(list(shots = shots, success_rate = success_rate))
}
num_simulations <- 1000
results <- replicate(num_simulations, basketball())
# Extract the number of shots and proportion of successes
shots_taken <- sapply(results, function(x) x$shots)
n_sims <- 1000
n_shots <- rep(NA,n_sims)
for(i in 1:n_sims){
n_shots[i] <- basketball2()
}
results <- basketball2()
n_success <- rep(NA,n_sims)
for(i in 1:n_sims){
n_shots[i] <- result[[1]]
}
for(i in 1:n_sims){
n_shots[i] <- results[[1]]
}
for(i in i:n_sims){
n_success[i] <- resulults[[2]]
}
for(i in i:n_sims){
n_success[i] <- results[[2]]
}
n_shots <- rep(NA,n_sims)
n_success <- rep(NA,n_sims)
View(results)
rbinom(1, 10, 0.4)
rbinom(1, 10, 0.4)
rbinom(1, 10, 0.4)
rbinom(1, 10, 0.4)/10
rbinom(1, 10, 0.4)/10
rbinom(1, 10, 0.4)/10
rbinom(3, 10, 0.4)
rbinom(3, 10, 0.4)
rbinom(3, 10, 0.4)
rbinom?
```
?rbinom()
rbinom(3, size = 10, prob = 0.4)
dbinom(3, size = 10, prob = 0.4)
rbinom(3, size = 10, prob = 0.4)
dbinom(3, size = 10, prob = 0.4)
3*0.4
(3*0.4)*(7*0.6)
(0.4^3)*(0.6^7)
(10*9*8)*(0.4^3)*(0.6^7)
((10*9*8)/(3*2*1))*(0.4^3)*(0.6^7)
dbinom(3, size = 10, prob = 0.4)
basketball3 <- function() {
miss <- 0
hits <- 0
for (i in 1:10) {
shot <- rbinom(1, 1, 0.4)
if (shot == 1) {
hits <- hits + 1
}
else{
miss <- miss + 1
}
}
success_rate <- hits/10
return(success_rate)
}
n_sims <- 1000
n_shots <- rep(NA,n_sims)
for(i in 1:n_sims){
n_shots[i] <- basketball3()
}
hist(n_shots)
basketball3 <- function() {
miss <- 0
hits <- 0
for (i in 1:10) {
shot <- rbinom(1, 1, 0.4)
if (shot == 1) {
hits <- hits + 1
}
else{
miss <- miss + 1
}
}
success_rate <- hits/10
return(success_rate)
}
n_sims <- 10000
n_shots <- rep(NA,n_sims)
for(i in 1:n_sims){
n_shots[i] <- basketball3()
}
hist(n_shots)
hist(N_shots, breaks = 10, prob = TRUE)
hist(n_shots, breaks = 10, prob = TRUE)
success <- sum(shots)
basketball3 <- function() {
shots <- rbinom(1, 1, 0.4)
success <- sum(shots)
return(success)
}
basketball3 <- function() {
shots <- rbinom(10, 1, 0.4)
success <- sum(shots)
return(success)
}
n_sims <- 10000
n_shots <- rep(NA,n_sims)
for(i in 1:n_sims){
n_shots[i] <- basketball3()
}
plot_(n_shots)
plot(n_shots)
hist(n_shots)
mean(simulated_results == 3)
mean(n_shots == 3)
n_sim <- 1000
simulation <- rep(n_sim,sum(runif(20)))
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation)
mu <- 20 * 0.5
sigma <- sqrt(20 * (1/12))
mu <- 20 * 0.5
curve(dnorm(x, mean = mu, sd = sigma))
mu <- 20 * 0.5
sigma <- sqrt(20 * (1/12))
curve(dnorm(x, mean = mu, sd = sigma))
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE)
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation)
mu <- 20 * 0.5
sigma <- sqrt(20 * (1/12))
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE)
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation)
mu <- 20 * 0.5  # Mean of the sum of 20 uniform(0, 1) random variables
sigma <- sqrt(20 * (1/12))  # Standard deviation of the sum of 20 uniform(0, 1) random variables
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE, col = "blue", lwd = 2, yaxt = "n")
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation)
mu <- 20 * 0.5  # Mean of the sum of 20 uniform(0, 1) random variables
sigma <- sqrt(20 * (1/12))  # Standard deviation of the sum of 20 uniform(0, 1) random variables
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE)
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation)
mu <- 20 * 0.5  # Mean of the sum of 20 uniform(0, 1) random variables
sigma <- sqrt(20 * (1/12))  # Standard deviation of the sum of 20 uniform(0, 1) random variables
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE, col = "blue", lwd = 2, yaxt = "n")
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation)
mu <- 20 * 0.5  # Mean of the sum of 20 uniform(0, 1) random variables
sigma <- sqrt(20 * (1/12))  # Standard deviation of the sum of 20 uniform(0, 1) random variables
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE, col = "blue", lwd = 2, yaxt = "n")
# Number of simulations
num_simulations <- 1000
# Generate 1000 simulations of the sum of 20 uniform(0, 1) random variables
simulations <- replicate(num_simulations, sum(runif(20)))
# Plot histogram of the simulations
hist(simulations, breaks = 30, freq = FALSE, main = "Histogram of Sum of 20 Uniform(0, 1) Random Variables",
xlab = "Sum of 20 Uniform(0, 1) Random Variables")
# Overlay normal density curve
mu <- 20 * 0.5  # Mean of the sum of 20 uniform(0, 1) random variables
sigma <- sqrt(20 * (1/12))  # Standard deviation of the sum of 20 uniform(0, 1) random variables
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE, col = "blue", lwd = 2, yaxt = "n")
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation,breaks=20,freq=FALSE)
mu <- 20 * 0.5  # Mean of the sum of 20 uniform(0, 1) random variables
sigma <- sqrt(20 * (1/12))  # Standard deviation of the sum of 20 uniform(0, 1) random variables
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE, col = "blue", lwd = 2, yaxt = "n")
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation,breaks=20,freq=FALSE)
mu <- 20 * 0.5
sigma <- sqrt(20 * (1/12))
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE)
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation,breaks=20,freq=FALSE)
mu <- 20 * 0.5
sigma <- sqrt(20 * (1/12))
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE)
n_sim <- 1000
simulation <- replicate(n_sim,sum(runif(20)))
hist(simulation,breaks=20,freq=FALSE)
mu <- 20 * 0.5
sigma <- sqrt(20 * (1/12))
curve(dnorm(x, mean = mu, sd = sigma), add = TRUE)
?rnorm()
men <- (100,69.1,2.9)
men <- rnorm(100,69.1,2.9)
women <- rnorm(100,63.7,2.9)
difference <- men-women
hist(difference)
mean(difference)
sd(difference)
print(c(mean(difference),69.1-63.7))
men <- rnorm(100,69.1,2.9)
women <- rnorm(100,63.7,2.9)
difference <- men-women
print(c(mean(difference),69.1-63.7))
print(c(mean(difference),69.1-63.7))
?rnorm()
men <- rnorm(100,69.1,2.9)
women <- rnorm(100,63.7,2.9)
difference <- men-women
hist(difference)
print(c(mean(difference),69.1-63.7))
sd(difference)
?rnorm()
men <- rnorm(100,69.1,2.9)
women <- rnorm(100,63.7,2.9)
difference <- men-women
hist(difference)
print(c(mean(difference),69.1-63.7))
sd(difference)
difference <- replicate(1000, {
sample_men <- rnorm(100, 69.7, 2.9)
sample_women <- rnorm(100, 63.7, 2.7)
mean(sample_men) - mean(sample_women)
})
?replicate()
hist(differences)
hist(difference)
mean(difference)
sd(difference)
