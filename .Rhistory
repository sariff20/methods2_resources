mean(1,2,3)
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 1
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
plot(cost,effect)
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
estimate
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
intervals_50
intervals_95
library(pacman)
p_load(ggplot2)
ggplot(aes(x = cost, y = effect)) +
geom_point() +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_df <- data.frame(x = cost, y = effect)
ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point() +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(aes(color = "darkgold")) +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(aes(color = "orange")) +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(aes(color = "orange")) +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(aes(color = "blue")) +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "orange") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "orange") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 1
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "orange") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is:", intervals_50))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:", intervals_50))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 1
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "orange") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 1
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "orange") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 2
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "lightblue") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
library(pacman)
p_load(ggplot2)
##rlnorm!!
#variables
men_mean <- 5.13
men_sd <- 0.17
men_prop <- 0.51
women_mean <- 4.96
women_sd <- 0.20
women_prop <- 0.49
n_adults <- 10
n_sims <- 10000
limit <- 1750
exceeding <- 0
#making simulation
for (i in 1:n_sims) {
male <- rbinom(n_adults, 1, men_prop)
weight <- ifelse(male == 1,
rlnorm(n_adults, men_mean, men_sd),
rlnorm(n_adults, women_mean, women_sd))
total_weight <- sum(weight)
if (total_weight > limit) {
exceeding <- exceeding + 1
}
}
probability <- exceeding / n_sims
probability
save_perunit <- 5
save_perunit_se <- 4
market <- 40000
market_se <- 10000
n_sims <- 10000
savings <- rep(NA, n_sims)
for (i in 1:n_sims) {
savings[i] <-
rnorm(1, save_perunit, save_perunit_se) * rnorm(1, market, market_se)
}
mean(savings)
save_perunit <- 5
save_perunit_se <- 4
market <- 40000
market_se <- 10000
n_sims <- 10000
savings <- rep(NA, n_sims)
for (i in 1:n_sims) {
savings[i] <- (save_perunit + rnorm(1,0,save_perunit_se)) * (market + rnorm(1, 0, market_se))
}
mean(savings)
list <- c(1,2,3)
mean(list)
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 1
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "orange") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 2
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "lightblue") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 2
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "lightblue") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 2
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "lightblue") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
#setting parameters
##parameters for estimated difference in costs
cost_diff_mean <- 600
cost_diff_se <- 400
cost_df <- 52
##parameters for estimated difference in effectiveness
effect_diff_mean <- 3
effect_diff_se <- 2
effect_df <- 102
##number of simulations
n_sims <- 1000
##vectors to store values from the simulation
cost <- rep(NA, n_sims)
effect <- rep(NA, n_sims)
#simulation
for (i in 1:n_sims){
cost[i] <- rnorm(1, cost_diff_mean, cost_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for costs
effect[i] <- rnorm(1, effect_diff_mean, effect_diff_se) #sampling from normal distribution with the given mean and the standard error of the estimated mean for effectiveness
}
#making scatterplot for the simulation
costeffect_df <- data.frame(x = cost, y = effect)
costeffect_plot <- ggplot(costeffect_df, aes(x = cost, y = effect)) +
geom_point(color = "lightblue") +
labs(
x = "draws of cost difference",
y = "draws of effectiveness difference",
title = "Simulation of Difference Between Costs and Effectiveness of Two Treatments"
) +
theme_minimal()
costeffect_plot
#calculating cost-effectiveness ratio
cost_effect_ratio <- cost/effect
##calculating estimate
estimate <- mean(cost_effect_ratio)
print(paste("The estimate for the incremental cost-effectiveness ratio is:", estimate))
##calculating intervals
intervals_50 <- quantile(cost_effect_ratio,c(0.25,0.75))
intervals_95 <- quantile(cost_effect_ratio,c(0.025,0.975))
print(paste("The 50% interval for the incremental cost-effectiveness ratio is: [", intervals_50[1], ",", intervals_50[2], "]"))
print(paste("The 95% interval for the incremental cost-effectiveness ratio is:[", intervals_95[1], ",", intervals_95[2], "]"))
